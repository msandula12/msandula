{"version":3,"sources":["App.js","Text.js","serviceWorker.js","index.js"],"names":["App","useState","page","setPage","shouldShowHeader","setShouldShowHeader","year","Date","getFullYear","homePage","createRef","useEffect","determineIfHomePageIsOutOfView","current","rect","getBoundingClientRect","height","top","window","addEventListener","removeEventListener","className","id","ref","href","onClick","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOA2IeA,G,MArIH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,OAEgCF,oBAAS,GAFzC,mBAETG,EAFS,KAESC,EAFT,KAIVC,GAAO,IAAIC,MAAOC,cAElBC,EAAWC,sBAgBjB,OAdAC,qBAAU,WACR,IAAMC,EAAiC,WACrC,GAAKH,EAASI,QAAd,CAGA,IAAMC,EAAOL,EAASI,QAAQE,wBACtBC,EAAgBF,EAAhBE,OAAQC,EAAQH,EAARG,IAChBZ,EAAoBY,EAAMD,GAAU,KAGtC,OADAE,OAAOC,iBAAiB,SAAUP,GAC3B,kBACLM,OAAOE,oBAAoB,SAAUR,MACtC,CAACH,IAGF,yBAAKY,UAAU,UAEb,yBAAKC,GAAG,QAAQC,IAAKd,EAAUY,UAAU,gBACvC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WACb,0BAAMA,UAAU,iBAAiB,KACjC,0BAAMA,UAAU,cAAc,eAC9B,0BAAMA,UAAU,iBAAiB,QACjC,0BAAMA,UAAU,cAAc,KAC9B,0BAAMA,UAAU,0BACb,4BAEH,0BAAMA,UAAU,cAAc,OAGlC,yBAAKA,UAAU,+BACb,uBAAGG,KAAK,UAAUC,QAAS,kBAAMtB,EAAQ,WACtC,OAMNC,GACC,gCACE,yBAAKiB,UAAU,UACb,yBAAKA,UAAU,WACb,0BAAMA,UAAU,iBAAiB,KACjC,0BAAMA,UAAU,cAAc,eAC9B,0BAAMA,UAAU,iBAAiB,QACjC,0BAAMA,UAAU,cAAc,KAC9B,0BAAMA,UAAU,0BACb,4BAEH,0BAAMA,UAAU,cAAc,OAGlC,yBAAKA,UAAU,OACb,uBACEG,KAAK,UACLC,QAAS,kBAAMtB,EAAQ,UACvBkB,UAAoB,UAATnB,EAAmB,SAAW,IAH3C,SAOA,uBACEsB,KAAK,WACLC,QAAS,kBAAMtB,EAAQ,WACvBkB,UAAoB,WAATnB,EAAoB,SAAW,IAH5C,WAQF,yBAAKmB,UAAU,oBACb,yBAAKA,UAAU,+BACb,uBAAGG,KAAK,SAASC,QAAS,kBAAMtB,EAAQ,UACrC,QAQX,yBAAKmB,GAAG,SAASD,UAAU,cACzB,6BACE,qCACA,yBAAKA,UAAU,WACb,yMAMA,kPAMA,kGAIA,iKASN,yBAAKC,GAAG,UAAUD,UAAU,eAC1B,6BACE,sCACA,yBAAKA,UAAU,WACb,6BACE,8BC/HS,6qGDsIjB,iDAAyBf,EAAzB,oBE1HcoB,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2bc9da39.chunk.js","sourcesContent":["import React, { createRef, useEffect, useState } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport { ResumeText } from './Text';\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('');\r\n  const [shouldShowHeader, setShouldShowHeader] = useState(false);\r\n\r\n  const year = new Date().getFullYear();\r\n\r\n  const homePage = createRef();\r\n\r\n  useEffect(() => {\r\n    const determineIfHomePageIsOutOfView = () => {\r\n      if (!homePage.current) {\r\n        return;\r\n      }\r\n      const rect = homePage.current.getBoundingClientRect();\r\n      const { height, top } = rect;\r\n      setShouldShowHeader(top + height <= 0);\r\n    };\r\n    window.addEventListener('scroll', determineIfHomePageIsOutOfView);\r\n    return () =>\r\n      window.removeEventListener('scroll', determineIfHomePageIsOutOfView);\r\n  }, [homePage]);\r\n\r\n  return (\r\n    <div className=\"my-app\">\r\n      {/* LANDING */}\r\n      <div id=\"/home\" ref={homePage} className=\"page landing\">\r\n        <div className=\"landing-logo\">\r\n          <div className=\"my-name\">\r\n            <span className=\"code-operator\">{'<'}</span>\r\n            <span className=\"code-class\">{'MikeSandula'}</span>\r\n            <span className=\"code-operator\">{' /> '}</span>\r\n            <span className=\"code-field\">{'{'}</span>\r\n            <span className=\"code-singleLineComment\">\r\n              {'/* Software Developer */'}\r\n            </span>\r\n            <span className=\"code-field\">{'}'}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"scroll-down arrow rotate-90\">\r\n          <a href=\"#/about\" onClick={() => setPage('about')}>\r\n            {'>'}\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      {/* HEADER */}\r\n      {shouldShowHeader && (\r\n        <header>\r\n          <div className=\"flex-1\">\r\n            <div className=\"my-name\">\r\n              <span className=\"code-operator\">{'<'}</span>\r\n              <span className=\"code-class\">{'MikeSandula'}</span>\r\n              <span className=\"code-operator\">{' /> '}</span>\r\n              <span className=\"code-field\">{'{'}</span>\r\n              <span className=\"code-singleLineComment\">\r\n                {'/* Software Developer */'}\r\n              </span>\r\n              <span className=\"code-field\">{'}'}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"nav\">\r\n            <a\r\n              href=\"#/about\"\r\n              onClick={() => setPage('about')}\r\n              className={page === 'about' ? 'active' : ''}\r\n            >\r\n              About\r\n            </a>\r\n            <a\r\n              href=\"#/resume\"\r\n              onClick={() => setPage('resume')}\r\n              className={page === 'resume' ? 'active' : ''}\r\n            >\r\n              Resume\r\n            </a>\r\n          </div>\r\n          <div className=\"flex-1 scroll-up\">\r\n            <div className=\"arrow rotate-90 float-right\">\r\n              <a href=\"#/home\" onClick={() => setPage('home')}>\r\n                {'<'}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      )}\r\n\r\n      {/* ABOUT */}\r\n      <div id=\"/about\" className=\"page about\">\r\n        <div>\r\n          <h1>About</h1>\r\n          <div className=\"content\">\r\n            <p>\r\n              After graduating from Oakland University with a Bachelor of Arts\r\n              in Journalism in 2010, Mike Sandula worked as a copy editor for\r\n              several newspapers in Southeast Michigan.\r\n            </p>\r\n            {/* Add paragraph about WHY I made the switch */}\r\n            <p>\r\n              In 2016, Mike attended the Front-End Bootcamp at Grand Circus in\r\n              Detroit and made the switch to programming, where his background\r\n              as a copy editor has proven handy in identifying bugs and\r\n              maintaining clean code.\r\n            </p>\r\n            <p>\r\n              Mike specializes in building front-ends for large web\r\n              applications.\r\n            </p>\r\n            <p>\r\n              When he's not behind a computer, Mike can be found behind his drum\r\n              set, behind a book, or beside his wife and their cat, Ziggy.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* RESUME */}\r\n      <div id=\"/resume\" className=\"page resume\">\r\n        <div>\r\n          <h1>Resume</h1>\r\n          <div className=\"content\">\r\n            <pre>\r\n              <code>{ResumeText}</code>\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* FOOTER */}\r\n      <footer>Copyright &copy;{year} Mike Sandula</footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const ResumeText = `\r\n<Resume>\r\n  <MikeSandula title=\"Software Developer\" />\r\n  <Contact email=\"msandula@gmail.com\" />\r\n  <GitHub userName=\"msandula12\" />\r\n  <LinkedIn userName=\"MikeSandula\" />\r\n  <Section title=\"Education\">\r\n    <Education\r\n      place=\"Grand Circus\"\r\n      location=\"Detroit, Mich.\"\r\n      graduated=\"March 2016\"\r\n    >\r\n      <Description>JavaScript Developer Bootcamp</Description>\r\n    </Education>\r\n    <Education\r\n      place=\"Oakland University\"\r\n      location=\"Rochester, Mich.\"\r\n      graduated=\"December 2016\"\r\n    >\r\n      <Description>Bachelor of Arts in Journalism, GPA 3.6</Description>\r\n      <Description>Cum Laude with departmental honors</Description>\r\n    </Education>\r\n  </Section>\r\n  <Skills \r\n    skills=\"[\r\n      'Angular 2+', \r\n      'React.js', \r\n      'Vue.js', \r\n      'jQuery', \r\n      'JavaScript/ES6/TypeScript', \r\n      'RxJS', \r\n      'FlatBuffers', \r\n      'Redux/MobX', \r\n      'NPM/Node.js', \r\n      'Webpack/Gulp/Grunt', \r\n      'Git/GitHub/GitLab', \r\n      'HTML5', \r\n      'CSS/LESS/Sass', \r\n      'D3.js', \r\n      'Adobe XD'\r\n    ]\" \r\n  />\r\n  <Section title=\"Experience\">\r\n    <Job\r\n      isCurrent\r\n      company=\"Great Lakes Consulting Services\"\r\n      location=\"Livonia, Mich.\"\r\n      role=\"Font-End Developer\"\r\n      startDate=\"January 2019\"\r\n    >\r\n      <Description>\r\n        Build and maintain a React with Redux front-end of an end-to-end\r\n        budget forecasting application for Trinity Health\r\n      </Description>\r\n      <Description>\r\n        Use Flatbuffers to serialize and deserialize large amounts of\r\n        budgeting data\r\n      </Description>\r\n      <Description>\r\n        Display data using flexible, interactive data grids and charts\r\n      </Description>\r\n    </Job>\r\n    <Job\r\n      company=\"Logicdrop\"\r\n      location=\"Ferndale, Mich.\"\r\n      role=\"Software Developer\"\r\n      startDate=\"April 2016\"\r\n      endDate=\"December 2018\"\r\n    >\r\n      <Description>\r\n        Built client-facing websites and web apps using the latest\r\n        front-end frameworks\r\n      </Description>\r\n      <Description>\r\n        Lead developer for the front-end of Logicdropâ€™s Studio Platform\r\n      </Description>\r\n      <Description>\r\n        Worked side-by-side with back-end team to implement Rest APIs with\r\n        RxJS observables\r\n      </Description>\r\n      <Description>\r\n        Wrote code for importing and exporting Excel spreadsheets and .CSV\r\n        files and displaying them in an editable data table\r\n      </Description>\r\n      <Description>\r\n        Followed GitLab best practices for version control and continuous\r\n        integration\r\n      </Description>\r\n      <Description>\r\n        Designed and developed UI wireframes and mockups using Adobe XD\r\n      </Description>\r\n    </Job>\r\n    <Job\r\n      company=\"The Oakland Press (Digital First Media)\"\r\n      location=\"Pontiac, Mich.\"\r\n      role=\"Pagination Hub Editor\"\r\n      startDate=\"August 2011\"\r\n      endDate=\"January 2016\"\r\n    >\r\n      <Description>\r\n        Designed, proofed and finalized the print products for eight daily\r\n        broadsheets plus a handful of weekly Michigan and New York\r\n        newspapers\r\n      </Description>\r\n    </Job>\r\n  </Section>\r\n</Resume>\r\n`;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}